(window.webpackJsonp=window.webpackJsonp||[]).push([[344],{412:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return i})),n.d(t,"default",(function(){return l}));var r=n(3),a=n(7),o=(n(0),n(419)),s={title:"Tokens"},c={unversionedId:"Tokens",id:"Tokens",isDocsHomePage:!1,title:"Tokens",description:"A token\xa0in a programming language is the smallest significant sequence of characters. In the lsFusion\xa0language tokens are keywords, IDs, literals and special character sequences.",source:"@site/docs\\Tokens.md",slug:"/Tokens",permalink:"/docusaurustest/docs/Tokens",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Tokens.md",version:"current",sidebar:"docs",previous:{title:"Language",permalink:"/docusaurustest/docs/Language"},next:{title:"IDs",permalink:"/docusaurustest/docs/IDs"}},i=[{value:"Examples",id:"examples",children:[]}],u={toc:i};function l(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A ",Object(o.b)("em",{parentName:"p"},"token"),"\xa0in a programming language is the smallest significant sequence of characters. In the ",Object(o.b)("strong",{parentName:"p"},"lsFusion\xa0"),"language tokens are keywords, ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docusaurustest/docs/IDs"}),"IDs"),", ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"/docusaurustest/docs/Literals"}),"literals")," and special character sequences."),Object(o.b)("p",null,"Tokens are usually separated by ",Object(o.b)("em",{parentName:"p"},"delimiters")," (spaces, line breaks, tabs), but separators can be omitted in cases where ambiguity does not occur."),Object(o.b)("h3",{id:"examples"},"Examples"))}l.isMDXComponent=!0},419:function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=a.a.createContext({}),l=function(e){var t=a.a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},p=function(e){var t=l(e.components);return a.a.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=l(n),m=r,b=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return n?a.a.createElement(b,c(c({ref:t},u),{},{components:n})):a.a.createElement(b,c({ref:t},u))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=m;var c={};for(var i in t)hasOwnProperty.call(t,i)&&(c[i]=t[i]);c.originalType=e,c.mdxType="string"==typeof e?e:r,s[1]=c;for(var u=2;u<o;u++)s[u]=n[u];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);