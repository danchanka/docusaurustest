(window.webpackJsonp=window.webpackJsonp||[]).push([[230],{302:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return p})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return b})),r.d(t,"default",(function(){return c}));var n=r(3),a=r(7),s=(r(0),r(423)),o=r(424),p={title:"Expression"},i={unversionedId:"Expression",id:"Expression",isDocsHomePage:!1,title:"Expression",description:"An expression is a combination of property operators and parameters. When an expression is evaluated sequentially in priority\xa0 order, all the operators are executed.",source:"@site/docs/Expression.md",slug:"/Expression",permalink:"/docusaurustest/ru/docs/Expression",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Expression.md",version:"current",sidebar:"docs",previous:{title:"Instruction =",permalink:"/docusaurustest/ru/docs/Instruction_="},next:{title:"Operator priority",permalink:"/docusaurustest/ru/docs/Operator_priority"}},b=[{value:"Examples",id:"examples",children:[]}],l={toc:b};function c(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"An ",Object(s.b)("em",{parentName:"p"},"expression")," is a combination of ",Object(s.b)("a",{parentName:"p",href:"/docusaurustest/ru/docs/Property_operators"},"property operators")," and ",Object(s.b)("a",{parentName:"p",href:"/docusaurustest/ru/docs/Properties"},"parameters"),". When an expression is evaluated sequentially in ",Object(s.b)("a",{parentName:"p",href:"/docusaurustest/ru/docs/Operator_priority"},"priority"),"\xa0 order, all the operators are executed."),Object(s.b)("p",null,"The result of that execution will be either a ",Object(s.b)("a",{parentName:"p",href:"/docusaurustest/ru/docs/Properties"},"property")," or a parameter (in the case of single-parameter expression). Their value shall be called the ",Object(s.b)("em",{parentName:"p"},"value")," of the expression."),Object(s.b)("p",null,"An expression can be described by the following set of recursive rules:"),Object(s.b)("table",null,Object(s.b)("thead",{parentName:"table"},Object(s.b)("tr",{parentName:"thead"},Object(s.b)("th",{parentName:"tr",align:null},Object(s.b)("strong",null,"Rule")),Object(s.b)("th",{parentName:"tr",align:null},Object(s.b)("strong",null,"Description")))),Object(s.b)("tbody",{parentName:"table"},Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("pre",null,Object(s.b)("code",null,"expression := parameter ","|"," constant ","|"," prefixOperator"))),Object(s.b)("td",{parentName:"tr",align:null},"A single parameter, ",Object(s.b)("a",{parentName:"td",href:"/docusaurustest/ru/docs/Constant"},"constant"),", or non-arithmetic prefix operator")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("pre",null,Object(s.b)("code",null,"expression := prefixArithmOp expression"))),Object(s.b)("td",{parentName:"tr",align:null},"A unary arithmetic prefix operator, with the expression passed to it as an operand")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("pre",null,Object(s.b)("code",null,"expression := expression postfixOp"))),Object(s.b)("td",{parentName:"tr",align:null},"A unary postfix operator, with the expression passed to it as an operand")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("pre",null,Object(s.b)("code",null,"expression := expression binaryOp expression"))),Object(s.b)("td",{parentName:"tr",align:null},"A binary operator with the expressions passed to it as operands")),Object(s.b)("tr",{parentName:"tbody"},Object(s.b)("td",{parentName:"tr",align:null},Object(s.b)("pre",null,Object(s.b)("code",null,"expression := ( expression )"))),Object(s.b)("td",{parentName:"tr",align:null},"Expression in parentheses")))),Object(s.b)("p",null,"An expression cannot include ",Object(s.b)("a",{parentName:"p",href:"/docusaurustest/ru/docs/Property_operators#contextindependent"},"context-independent")," property operators."),Object(s.b)("h3",{id:"examples"},"Examples"),Object(s.b)(o.a,{url:"https://documentation.lsfusion.org/sample?file=ExpressionSample",mdxType:"CodeSample"}),Object(s.b)("p",null,"**",Object(s.b)("br",{parentName:"p"}),"\n","**"))}c.isMDXComponent=!0}}]);