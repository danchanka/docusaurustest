(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{160:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return n})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return i})),r.d(t,"default",(function(){return l}));var o=r(3),a=r(7),p=(r(0),r(423)),s=r(424),n={title:"EXCLUSIVE operator"},c={unversionedId:"EXCLUSIVE_operator",id:"EXCLUSIVE_operator",isDocsHomePage:!1,title:"EXCLUSIVE operator",description:"The EXCLUSIVE\xa0operator creates a\xa0property that implements\xa0a selection\xa0of one of the values\xa0(polymorphic form).",source:"@site/docs/EXCLUSIVE_operator.md",slug:"/EXCLUSIVE_operator",permalink:"/docusaurustest/ru/docs/EXCLUSIVE_operator",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/EXCLUSIVE_operator.md",version:"current",sidebar:"docs",previous:{title:"DATA operator",permalink:"/docusaurustest/ru/docs/DATA_operator"},next:{title:"FORMULA operator",permalink:"/docusaurustest/ru/docs/FORMULA_operator"}},i=[{value:"Syntax",id:"syntax",children:[]},{value:"Description",id:"description",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Examples",id:"examples",children:[]}],u={toc:i};function l(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(p.b)("wrapper",Object(o.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(p.b)("p",null,"The ",Object(p.b)("strong",{parentName:"p"},"EXCLUSIVE\xa0"),"operator creates a\xa0",Object(p.b)("a",{parentName:"p",href:"/docusaurustest/ru/docs/Properties"},"property")," that implements\xa0a ",Object(p.b)("a",{parentName:"p",href:"/docusaurustest/ru/docs/Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE#exclusive"},"selection"),"\xa0of one of the values\xa0(polymorphic form)."),Object(p.b)("h3",{id:"syntax"},"Syntax"),Object(p.b)("pre",null,Object(p.b)("code",{parentName:"pre"},"EXCLUSIVE expr1, ..., exprN\n")),Object(p.b)("h3",{id:"description"},"Description"),Object(p.b)("p",null,"The ",Object(p.b)("strong",{parentName:"p"},"EXCLUSIVE")," operator creates a property whose value will be the value of one of the properties specified in the operator. It is assumed that for any set of parameters, at most one of the properties will be non-",Object(p.b)("strong",{parentName:"p"},"NULL"),". The value of the property will be the value of this single non-",Object(p.b)("strong",{parentName:"p"},"NULL")," property, or ",Object(p.b)("strong",{parentName:"p"},"NULL")," if there are no such properties."),Object(p.b)("h3",{id:"parameters"},"Parameters"),Object(p.b)("p",null,Object(p.b)("em",{parentName:"p"},"expr1, ..., exprN")),Object(p.b)("p",null,"List\xa0of ",Object(p.b)("a",{parentName:"p",href:"/docusaurustest/ru/docs/Expression"},"expressions")," whose values will determine the value of the property."),Object(p.b)("h3",{id:"examples"},"Examples"),Object(p.b)(s.a,{url:"https://documentation.lsfusion.org/sample?file=OperatorPropertySample&block=exclusive",mdxType:"CodeSample"}),Object(p.b)("p",null,"**",Object(p.b)("br",{parentName:"p"}),"\n","**"))}l.isMDXComponent=!0}}]);