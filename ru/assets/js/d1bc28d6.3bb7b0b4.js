(window.webpackJsonp=window.webpackJsonp||[]).push([[291],{362:function(t,e,r){"use strict";r.r(e),r.d(e,"frontMatter",(function(){return o})),r.d(e,"metadata",(function(){return c})),r.d(e,"toc",(function(){return u})),r.d(e,"default",(function(){return p}));var n=r(3),a=r(7),l=(r(0),r(423)),b=r(424),o={title:"Comparison operators (=, >, <, ...)"},c={unversionedId:"Comparison_operators_=_...",id:"Comparison_operators_=_...",isDocsHomePage:!1,title:"Comparison operators (=, \\>, <, ...)",description:"Comparison operators create actions which return the result of the comparison operation. The values of the created properties belong to the built-in class\xa0BOOLEAN.",source:"@site/docs/Comparison_operators_=_....md",slug:"/Comparison_operators_=_...",permalink:"/docusaurustest/ru/docs/Comparison_operators_=_...",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Comparison_operators_=_....md",version:"current",sidebar:"docs",previous:{title:"Logical operators (AND, OR, NOT, XOR)",permalink:"/docusaurustest/ru/docs/Logical_operators_AND_OR_NOT_XOR"},next:{title:"Extremum (MAX, MIN)",permalink:"/docusaurustest/ru/docs/Extremum_MAX_MIN"}},u=[{value:"Language",id:"language",children:[]},{value:"Examples",id:"examples",children:[]}],s={toc:u};function p(t){var e=t.components,r=Object(a.a)(t,["components"]);return Object(l.b)("wrapper",Object(n.a)({},s,r,{components:e,mdxType:"MDXLayout"}),Object(l.b)("p",null,Object(l.b)("em",{parentName:"p"},"Comparison operators")," create ",Object(l.b)("a",{parentName:"p",href:"/docusaurustest/ru/docs/Properties"},"actions")," which return the result of the comparison operation. The values of the created properties belong to the ",Object(l.b)("a",{parentName:"p",href:"/docusaurustest/ru/docs/Built-in_classes"},"built-in class"),"\xa0",Object(l.b)("strong",{parentName:"p"},"BOOLEAN"),"."),Object(l.b)("p",null,"The platform currently supports the following comparison operators:"),Object(l.b)("table",null,Object(l.b)("thead",{parentName:"table"},Object(l.b)("tr",{parentName:"thead"},Object(l.b)("th",{parentName:"tr",align:null},Object(l.b)("div",null,Object(l.b)("br",null),Object(l.b)("div",null,Object(l.b)("br",null),"Operator",Object(l.b)("br",null)),Object(l.b)("br",null))),Object(l.b)("th",{parentName:"tr",align:null},Object(l.b)("div",null,Object(l.b)("br",null),Object(l.b)("div",null,Object(l.b)("br",null),"Name",Object(l.b)("br",null)),Object(l.b)("br",null))),Object(l.b)("th",{parentName:"tr",align:null},Object(l.b)("div",null,Object(l.b)("br",null),Object(l.b)("div",null,Object(l.b)("br",null),"Description",Object(l.b)("br",null)),Object(l.b)("br",null))),Object(l.b)("th",{parentName:"tr",align:null},Object(l.b)("div",null,Object(l.b)("br",null),Object(l.b)("div",null,Object(l.b)("br",null),"Example",Object(l.b)("br",null)),Object(l.b)("br",null))),Object(l.b)("th",{parentName:"tr",align:null},Object(l.b)("div",null,Object(l.b)("br",null),Object(l.b)("div",null,Object(l.b)("br",null),"Result",Object(l.b)("br",null)),Object(l.b)("br",null))))),Object(l.b)("tbody",{parentName:"table"},Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"= or =="),Object(l.b)("td",{parentName:"tr",align:null},"Equality"),Object(l.b)("td",{parentName:"tr",align:null},"Takes two operands and returns TRUE if the operands are equal"),Object(l.b)("td",{parentName:"tr",align:null},"5 = 5 or 5 == 5"),Object(l.b)("td",{parentName:"tr",align:null},"TRUE")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},"!="),Object(l.b)("td",{parentName:"tr",align:null},"Inequality"),Object(l.b)("td",{parentName:"tr",align:null},"Accepts two operands and returns TRUE if the operands are not equal"),Object(l.b)("td",{parentName:"tr",align:null},"3 != 5"),Object(l.b)("td",{parentName:"tr",align:null},"TRUE")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},">",", <"),Object(l.b)("td",{parentName:"tr",align:null},"Strict comparison"),Object(l.b)("td",{parentName:"tr",align:null},Object(l.b)("p",null,"Accepts two operands\xa0and returns TRUE if the strict comparison condition is met")),Object(l.b)("td",{parentName:"tr",align:null},"3 ",">"," 5"),Object(l.b)("td",{parentName:"tr",align:null},"NULL")),Object(l.b)("tr",{parentName:"tbody"},Object(l.b)("td",{parentName:"tr",align:null},">","=, <="),Object(l.b)("td",{parentName:"tr",align:null},"Non-strict comparison"),Object(l.b)("td",{parentName:"tr",align:null},"Accepts two operands\xa0and returns TRUE if the non-strict comparison condition is met"),Object(l.b)("td",{parentName:"tr",align:null},"4 <= 5"),Object(l.b)("td",{parentName:"tr",align:null},"TRUE")))),Object(l.b)("p",null,"If one of the operands is ",Object(l.b)("strong",{parentName:"p"},"NULL"),", all operators will return ",Object(l.b)("strong",{parentName:"p"},"NULL")," as a result."),Object(l.b)("h3",{id:"language"},"Language"),Object(l.b)("p",null,"Description of ",Object(l.b)("a",{parentName:"p",href:"/docusaurustest/ru/docs/Comparison_operators"},"comparison operators"),"."),Object(l.b)("h3",{id:"examples"},"Examples"),Object(l.b)(b.a,{url:"https://documentation.lsfusion.org/sample?file=OperatorPropertySample&block=compare",mdxType:"CodeSample"}))}p.isMDXComponent=!0}}]);