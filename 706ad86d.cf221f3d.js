(window.webpackJsonp=window.webpackJsonp||[]).push([[166],{237:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return p})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return i})),r.d(t,"default",(function(){return l}));var a=r(3),n=r(7),o=(r(0),r(421)),s=r(56),p={title:"Properties"},c={unversionedId:"Properties",id:"Properties",isDocsHomePage:!1,title:"Properties",description:"A property is an element of the system that takes a set of objects (parameters) and returns exactly one object (the return value).",source:"@site/docs\\Properties.md",slug:"/Properties",permalink:"/docusaurustest/docs/Properties",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Properties.md",version:"current",sidebar:"docs",previous:{title:"Domain logic",permalink:"/docusaurustest/docs/Domain_logic"},next:{title:"Operators",permalink:"/docusaurustest/docs/Operators"}},i=[{value:"Type constraint",id:"type-constraint",children:[]},{value:"Language",id:"language",children:[]},{value:"Examples",id:"examples",children:[]}],u={toc:i};function l(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(o.b)("wrapper",Object(a.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"A ",Object(o.b)("em",{parentName:"p"},"property")," is an element of the system that takes a set of objects (",Object(o.b)("em",{parentName:"p"},"parameters"),") and returns exactly one object (the ",Object(o.b)("em",{parentName:"p"},"return value"),").\xa0"),Object(o.b)("p",null,"The type and the specifics of how to calculate each property are determined by the operator used to create the property."),Object(o.b)("h3",{id:"type-constraint"},"Type constraint"),Object(o.b)("p",null,"Due to implementation features, all non-",Object(o.b)("strong",{parentName:"p"},"NULL"),"\xa0property values returned must be of the same type. That is, a property cannot return,\xa0for example,\xa0a string for one set of parameters and a number for another."),Object(o.b)("p",null,"The same constraint exists for each property parameter: a property cannot have a non-",Object(o.b)("strong",{parentName:"p"},"NULL"),"\xa0value for an object collection in which, for example, the first parameter is a string, and at the same time have a non-",Object(o.b)("strong",{parentName:"p"},"NULL"),"\xa0value for another object collection, in which the first parameter is an object."),Object(o.b)("h3",{id:"language"},"Language"),Object(o.b)("p",null,"To create properties, use ",Object(o.b)("a",Object(a.a)({parentName:"p"},{href:"/docusaurustest/docs/Instruction_="}),"the ",Object(o.b)("strong",{parentName:"a"},"=")," instruction"),".\xa0"),Object(o.b)("h3",{id:"examples"},"Examples"),Object(o.b)(s.CodeSample,{url:"http://documentation.lsfusion.org:5000/sample?file=PropertySample",mdxType:"CodeSample"}))}l.isMDXComponent=!0}}]);