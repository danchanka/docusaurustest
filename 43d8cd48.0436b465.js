(window.webpackJsonp=window.webpackJsonp||[]).push([[99],{170:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return p})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return u}));var n=r(3),a=r(7),o=(r(0),r(421)),s=r(56),i={title:"String operators (+, CONCAT, SUBSTRING)"},p={unversionedId:"String_operators_+_CONCAT_SUBSTRING",id:"String_operators_+_CONCAT_SUBSTRING",isDocsHomePage:!1,title:"String operators (+, CONCAT, SUBSTRING)",description:"String operators are operators which parameters and result are the properties which values are instances of the string classes. The platform currently supports the following string operators:",source:"@site/docs\\String_operators_+_CONCAT_SUBSTRING.md",slug:"/String_operators_+_CONCAT_SUBSTRING",permalink:"/docusaurustest/docs/String_operators_+_CONCAT_SUBSTRING",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/String_operators_+_CONCAT_SUBSTRING.md",version:"current",sidebar:"docs",previous:{title:"Extremum (MAX, MIN)",permalink:"/docusaurustest/docs/Extremum_MAX_MIN"},next:{title:"Structure operations (STRUCT, \\[\\])",permalink:"/docusaurustest/docs/Structure_operations_STRUCT"}},c=[{value:"Determining the result class",id:"determining-the-result-class",children:[]},{value:"Examples",id:"examples",children:[]}],l={toc:c};function u(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"String operators are operators which parameters and result are the properties which values are instances of the string classes. The platform currently supports the following string operators:"),Object(o.b)("p",null,"[table was removed]"),Object(o.b)("p",null,"The ",Object(o.b)("strong",{parentName:"p"},"+")," and ",Object(o.b)("strong",{parentName:"p"},"SUBSTRING")," operators return ",Object(o.b)("strong",{parentName:"p"},"NULL")," if one of the operands is ",Object(o.b)("strong",{parentName:"p"},"NULL"),".\xa0The ",Object(o.b)("strong",{parentName:"p"},"CONCAT"),"\xa0operator treats\xa0",Object(o.b)("strong",{parentName:"p"},"NULL"),"\xa0value of the operand as an empty string (however, concatenation of two ",Object(o.b)("strong",{parentName:"p"},"NULL")," values still returns ",Object(o.b)("strong",{parentName:"p"},"NULL"),"). Also, in the ",Object(o.b)("strong",{parentName:"p"},"CONCAT")," operator you can optionally specify the third operand (",Object(o.b)("em",{parentName:"p"},"delimiter"),") which will be inserted if and only if both operands are not ",Object(o.b)("strong",{parentName:"p"},"NULL"),". For example, CONCAT ' ', 'John', 'Smith' = 'John Smith', but CONCAT ' ', 'John', NULL = 'John'."),Object(o.b)("h3",{id:"determining-the-result-class"},"Determining the result class"),Object(o.b)("p",null,"The result class is defined as:"),Object(o.b)("p",null,"[table was removed]"),Object(o.b)("p",null,"where ",Object(o.b)("em",{parentName:"p"},"blankPadded"),",\xa0",Object(o.b)("em",{parentName:"p"},"caseInsensitive"),"\xa0and\xa0",Object(o.b)("em",{parentName:"p"},"length")," are determined similarly to the rules for construction of a common ancestor\xa0for two\xa0built-in classes (Strings family)."),Object(o.b)("p",null,"In the + operator, operands which classes are other than string are cast to strings in accordance with the following table:"),Object(o.b)("p",null,"[table was removed]"),Object(o.b)("h3",{id:"examples"},"Examples"),Object(o.b)(s.CodeSample,{url:"https://documentation.lsfusion.org/sample?file=OperatorPropertySample&block=concat",mdxType:"CodeSample"}))}u.isMDXComponent=!0}}]);