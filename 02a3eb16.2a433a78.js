(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{77:function(t,e,a){"use strict";a.r(e),a.d(e,"frontMatter",(function(){return c})),a.d(e,"metadata",(function(){return o})),a.d(e,"toc",(function(){return p})),a.d(e,"default",(function(){return u}));var r=a(3),n=a(7),b=(a(0),a(421)),l=a(56),c={title:"Comparison operators (=, >, <, ...)"},o={unversionedId:"Comparison_operators_=_...",id:"Comparison_operators_=_...",isDocsHomePage:!1,title:"Comparison operators (=, \\>, <, ...)",description:"Comparison operators create actions which return the result of the comparison operation. The values of the created properties belong to the built-in class\xa0BOOLEAN.",source:"@site/docs\\Comparison_operators_=_....md",slug:"/Comparison_operators_=_...",permalink:"/docusaurustest/docs/Comparison_operators_=_...",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Comparison_operators_=_....md",version:"current",sidebar:"docs",previous:{title:"Logical operators (AND, OR, NOT, XOR)",permalink:"/docusaurustest/docs/Logical_operators_AND_OR_NOT_XOR"},next:{title:"Extremum (MAX, MIN)",permalink:"/docusaurustest/docs/Extremum_MAX_MIN"}},p=[{value:"Language",id:"language",children:[]},{value:"Examples",id:"examples",children:[]}],s={toc:p};function u(t){var e=t.components,a=Object(n.a)(t,["components"]);return Object(b.b)("wrapper",Object(r.a)({},s,a,{components:e,mdxType:"MDXLayout"}),Object(b.b)("p",null,Object(b.b)("em",{parentName:"p"},"Comparison operators")," create ",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/docusaurustest/docs/Properties"}),"actions")," which return the result of the comparison operation. The values of the created properties belong to the ",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/docusaurustest/docs/Built-in_classes"}),"built-in class"),"\xa0",Object(b.b)("strong",{parentName:"p"},"BOOLEAN"),"."),Object(b.b)("p",null,"The platform currently supports the following comparison operators:"),Object(b.b)("table",null,Object(b.b)("thead",{parentName:"table"},Object(b.b)("tr",{parentName:"thead"},Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("div",null,Object(b.b)("br",null),Object(b.b)("div",null,Object(b.b)("br",null),"Operator",Object(b.b)("br",null)),Object(b.b)("br",null))),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("div",null,Object(b.b)("br",null),Object(b.b)("div",null,Object(b.b)("br",null),"Name",Object(b.b)("br",null)),Object(b.b)("br",null))),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("div",null,Object(b.b)("br",null),Object(b.b)("div",null,Object(b.b)("br",null),"Description",Object(b.b)("br",null)),Object(b.b)("br",null))),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("div",null,Object(b.b)("br",null),Object(b.b)("div",null,Object(b.b)("br",null),"Example",Object(b.b)("br",null)),Object(b.b)("br",null))),Object(b.b)("th",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("div",null,Object(b.b)("br",null),Object(b.b)("div",null,Object(b.b)("br",null),"Result",Object(b.b)("br",null)),Object(b.b)("br",null))))),Object(b.b)("tbody",{parentName:"table"},Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"= or =="),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Equality"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Takes two operands and returns TRUE if the operands are equal"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"5 = 5 or 5 == 5"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"TRUE")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"!="),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Inequality"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Accepts two operands and returns TRUE if the operands are not equal"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"3 != 5"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"TRUE")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),">",", <"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Strict comparison"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),Object(b.b)("p",null,"Accepts two operands\xa0and returns TRUE if the strict comparison condition is met")),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"3 ",">"," 5"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"NULL")),Object(b.b)("tr",{parentName:"tbody"},Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),">","=, <="),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Non-strict comparison"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"Accepts two operands\xa0and returns TRUE if the non-strict comparison condition is met"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"4 <= 5"),Object(b.b)("td",Object(r.a)({parentName:"tr"},{align:null}),"TRUE")))),Object(b.b)("p",null,"If one of the operands is ",Object(b.b)("strong",{parentName:"p"},"NULL"),", all operators will return ",Object(b.b)("strong",{parentName:"p"},"NULL")," as a result."),Object(b.b)("h3",{id:"language"},"Language"),Object(b.b)("p",null,"Description of ",Object(b.b)("a",Object(r.a)({parentName:"p"},{href:"/docusaurustest/docs/Comparison_operators"}),"comparison operators"),"."),Object(b.b)("h3",{id:"examples"},"Examples"),Object(b.b)(l.CodeSample,{url:"https://documentation.lsfusion.org/sample?file=OperatorPropertySample&block=compare",mdxType:"CodeSample"}))}u.isMDXComponent=!0}}]);