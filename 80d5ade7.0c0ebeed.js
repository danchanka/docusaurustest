(window.webpackJsonp=window.webpackJsonp||[]).push([[188],{259:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return n})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return p})),r.d(t,"default",(function(){return l}));var s=r(3),o=r(7),a=(r(0),r(421)),i=r(56),n={title:"Arithmetic operators (+, -, *, ...)"},c={unversionedId:"Arithmetic_operators_+_-_...",id:"Arithmetic_operators_+_-_...",isDocsHomePage:!1,title:"Arithmetic operators (+, -, \\*, ...)",description:"Arithmetic operators\xa0create properties whose value is the result of an arithmetic operation.\xa0The arguments of these operators must be\xa0properties whose values are instances of number classes . The platform currently supports the following arithmetic operators:",source:"@site/docs\\Arithmetic_operators_+_-_....md",slug:"/Arithmetic_operators_+_-_...",permalink:"/docusaurustest/docs/Arithmetic_operators_+_-_...",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Arithmetic_operators_+_-_....md",version:"current",sidebar:"docs",previous:{title:"Primitive operations",permalink:"/docusaurustest/docs/Primitive_operations"},next:{title:"Logical operators (AND, OR, NOT, XOR)",permalink:"/docusaurustest/docs/Logical_operators_AND_OR_NOT_XOR"}},p=[{value:"Determining the result class",id:"determining-the-result-class",children:[]},{value:"Language",id:"language",children:[]},{value:"Examples",id:"examples",children:[]}],u={toc:p};function l(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(s.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Arithmetic operators"),"\xa0create ",Object(a.b)("a",Object(s.a)({parentName:"p"},{href:"/docusaurustest/docs/Properties"}),"properties")," whose value is the result of an arithmetic operation.\xa0The arguments of these operators must be\xa0properties whose values are instances of ",Object(a.b)("a",Object(s.a)({parentName:"p"},{href:"/docusaurustest/docs/Built-in_classes"}),"number classes")," . The platform currently supports the following arithmetic operators:"),Object(a.b)("p",null,"[table was removed]"),Object(a.b)("p",null,"All of these operators return ",Object(a.b)("strong",{parentName:"p"},"NULL")," if one of the operands is ",Object(a.b)("strong",{parentName:"p"},"NULL")," . It is also possible to use a special form of summation and difference operators with\xa0brackets, in which case ",Object(a.b)("strong",{parentName:"p"},"NULL")," will be equivalent to 0. The reverse is also true for these type of operators: if the result of an operator in such form is 0, then ",Object(a.b)("strong",{parentName:"p"},"NULL is returned")," (e. g., 5 (-) 5 = ",Object(a.b)("strong",{parentName:"p"},"NULL"),"):"),Object(a.b)("p",null,"[table was removed]"),Object(a.b)("h3",{id:"determining-the-result-class"},"Determining the result class"),Object(a.b)("p",null,"The result class is determined as:"),Object(a.b)("p",null,"[table was removed]"),Object(a.b)("h3",{id:"language"},"Language"),Object(a.b)("p",null,"Description ",Object(a.b)("a",Object(s.a)({parentName:"p"},{href:"/docusaurustest/docs/Arithmetic_operators"}),"of arithmetic operators"),"."),Object(a.b)("h3",{id:"examples"},"Examples"),Object(a.b)(i.CodeSample,{url:"http://documentation.lsfusion.org:5000/sample?file=OperatorPropertySample&block=arithmetic",mdxType:"CodeSample"}))}l.isMDXComponent=!0}}]);