(window.webpackJsonp=window.webpackJsonp||[]).push([[323],{393:function(t,e,n){"use strict";n.r(e),n.d(e,"frontMatter",(function(){return r})),n.d(e,"metadata",(function(){return c})),n.d(e,"toc",(function(){return s})),n.d(e,"default",(function(){return u}));var b=n(3),l=n(7),a=(n(0),n(421)),r={title:"Literals"},c={unversionedId:"Literals",id:"Literals",isDocsHomePage:!1,title:"Literals",description:"|Name|Example|Class|Description|Constraints|",source:"@site/docs\\Literals.md",slug:"/Literals",permalink:"/docusaurustest/docs/Literals",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Literals.md",version:"current",sidebar:"docs",previous:{title:"IDs",permalink:"/docusaurustest/docs/IDs"},next:{title:"Instructions",permalink:"/docusaurustest/docs/Instructions"}},s=[],O={toc:s};function u(t){var e=t.components,n=Object(l.a)(t,["components"]);return Object(a.b)("wrapper",Object(b.a)({},O,n,{components:e,mdxType:"MDXLayout"}),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Name"),Object(a.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Example"),Object(a.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Class"),Object(a.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Description"),Object(a.b)("th",Object(b.a)({parentName:"tr"},{align:null}),"Constraints"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("div",{class:"content-wrapper"},Object(a.b)("br",null),"String literal",Object(a.b)("br",null))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("p",null,Object(a.b)("strong",null,"'text'")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("strong",null,"'line1\\nline2'")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("strong",null,"'{system.cancel}'"))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("strong",null,"STRING","[N]",", TEXT, ITEXT")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"A sequence of characters enclosed in single quotes, allowing to use the special sequences '\\n', '\\r', '\\t'. To specify single quote and backslash characters, use the escape sequences '\\'' and '","\\","'. A string literal can also be a ",Object(a.b)("a",Object(b.a)({parentName:"td"},{href:"/docusaurustest/docs/Internationalization"}),"localizable")," string. In this case the literal's class will be ",Object(a.b)("strong",null,"TEXT"),", and instead of the characters '{' and '}' it is necessary to use the special sequences '","{","' and '","}","' respectively. If a string literal does not use localization capabilities, then the literal's class will be ",Object(a.b)("strong",null,"STRING","[N]")," where ",Object(a.b)("strong",null,"N")," is the number of characters in the string."),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("br",null),Object(a.b)("br",null))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("div",{class:"content-wrapper"},Object(a.b)("br",null),"Integer literal (int)",Object(a.b)("br",null))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("p",null,Object(a.b)("strong",null,"56")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("strong",null,"-32")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("strong",null,"1000000000"))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("strong",null,"INTEGER")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"A sequence of numbers with an optional minus sign at the beginning"),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"32-bit signed integers")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("div",{class:"content-wrapper"},Object(a.b)("br",null),"Integer literal (long)",Object(a.b)("br",null))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("p",null,Object(a.b)("strong",null,"56L")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("strong",null,"-32L")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("strong",null,"1000000000000L"))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("strong",null,"LONG")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"A sequence of numbers with an optional minus sign at the beginning and the letter L (uppercase or lowercase) at the end"),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"64-bit signed integers")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("div",{class:"content-wrapper"},Object(a.b)("br",null),"Floating-point literal",Object(a.b)("br",null))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("p",null,Object(a.b)("strong",null,"3d")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("strong",null,"4.25D")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("strong",null,"-2.125D"))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("strong",null,"DOUBLE")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"A sequence of numbers specifying the integer part, then a dot, then a sequence of numbers specifying the fractional part (possibly empty), then the letter D (uppercase or lowercase). With an optional minus sign at the beginning."),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"64-bit floating point number")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("div",{class:"content-wrapper"},Object(a.b)("br",null),Object(a.b)("strong",null,"NUMERIC")," class literal",Object(a.b)("br",null))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("p",null,Object(a.b)("strong",null,"3")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("strong",null,"4.25")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("strong",null,"-2.125"))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("strong",null,"NUMERIC","[N,M]")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"A sequence of numbers specifying the integer part, then a dot, then a sequence of numbers specifying the fractional part (possibly empty). With an optional minus sign at the beginning."),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"The number of digits of the integer and fractional parts of a literal is determined by its class")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("div",{class:"content-wrapper"},Object(a.b)("br",null),"Logical literal",Object(a.b)("br",null))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("strong",null,"TRUE")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("strong",null,"BOOLEAN")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"Keyword ",Object(a.b)("strong",null,"TRUE")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"The opposite value is the special value ",Object(a.b)("strong",null,"NULL"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("div",{class:"content-wrapper"},Object(a.b)("br",null),Object(a.b)("strong",null,"DATE")," class literal",Object(a.b)("br",null))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("p",null,Object(a.b)("strong",null,"1982_07_13")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("strong",null,"2000_01_25"))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("strong",null,"DATE")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"Date in the format ",Object(a.b)("strong",null,"YYYY_MM_DD"),". Four digits specifying the year, an underscore, two digits for the month, an underscore, and two digits for the day."),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("br",null),Object(a.b)("br",null))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("div",{class:"content-wrapper"},Object(a.b)("br",null),Object(a.b)("strong",null,"TIME")," class literal",Object(a.b)("br",null))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("p",null,Object(a.b)("strong",null,"12:05")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("strong",null,"00:59"))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("strong",null,"TIME")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"Time in the format ",Object(a.b)("strong",null,"HH:mm"),". Two digits for the hours, a colon and two digits for the minutes."),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"Hours from 0 to 23, minutes from 0 to 59")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("div",{class:"content-wrapper"},Object(a.b)("br",null),"Literal of class ",Object(a.b)("strong",null,"DATETIME"),Object(a.b)("br",null))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("strong",null,"1982_07_13_12:05")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("strong",null,"DATETIME")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"Date and time in the format ",Object(a.b)("strong",null,"YYYY_MM_DD_HH:mm")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("br",null),Object(a.b)("br",null))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("div",{class:"content-wrapper"},Object(a.b)("br",null),Object(a.b)("strong",null,"COLOR")," class literal",Object(a.b)("br",null))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("p",null,Object(a.b)("strong",null,"RGB(255, 0, 204)")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("strong",null,"#FF00CC"))),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),Object(a.b)("strong",null,"COLOR")),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"Two definition forms. The first is the keyword ",Object(a.b)("strong",null,"RGB"),", then comma-separated values for the red, green, and blue components in parentheses. The second is the pound sign, then the values of the red, blue, and green components in hexadecimal format, using two characters per component. ",Object(a.b)("strong",null)),Object(a.b)("td",Object(b.a)({parentName:"tr"},{align:null}),"Each number is from 0 to 255. In hexadecimal representation, you can use both uppercase and lowercase characters")))))}u.isMDXComponent=!0}}]);