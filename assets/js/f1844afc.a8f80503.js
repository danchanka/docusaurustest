(window.webpackJsonp=window.webpackJsonp||[]).push([[650],{721:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return l})),n.d(t,"default",(function(){return p}));var a=n(3),r=n(7),s=(n(0),n(749)),o={title:"How-to: Class extension"},c={unversionedId:"How-to_Class_extension",id:"How-to_Class_extension",isDocsHomePage:!1,title:"How-to: Class extension",description:"The typical scheme for extracting relations between classes to a separate module is as follows:",source:"@site/docs/How-to_Class_extension.md",slug:"/How-to_Class_extension",permalink:"/docusaurustest/docs/next/How-to_Class_extension",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/How-to_Class_extension.md",version:"current",sidebar:"docs",previous:{title:"How-to: Extensions: Overview",permalink:"/docusaurustest/docs/next/How-to_Extensions"},next:{title:"How-to: Property extension",permalink:"/docusaurustest/docs/next/How-to_Property_extension"}},l=[],i={toc:l};function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},i,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"The typical scheme for extracting relations between classes to a separate module is as follows:"),Object(s.b)("p",null,"Create the\xa0",Object(s.b)("strong",{parentName:"p"},"MA")," module in which the\xa0",Object(s.b)("strong",{parentName:"p"},"A"),"\xa0class will be created:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-lsf"},"MODULE MA;\n\nCLASS ABSTRACT A; // declaring an abstract class\na = ABSTRACT BPSTRING[10] (A); // declaring an abstract property a\n")),Object(s.b)("p",null,"Create the\xa0",Object(s.b)("strong",{parentName:"p"},"MB")," module in which the\xa0",Object(s.b)("strong",{parentName:"p"},"B"),"\xa0class will be created:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-lsf"},"MODULE MB;\n\nCLASS B; // declaring class B\nb = DATA BPSTRING[10] (B); // declaring the data property b for class B\n")),Object(s.b)("p",null,"Create the\xa0",Object(s.b)("strong",{parentName:"p"},"MBA")," module in which the relation between the\xa0",Object(s.b)("strong",{parentName:"p"},"A"),"\xa0and\xa0",Object(s.b)("strong",{parentName:"p"},"B"),"\xa0class will be defined:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-lsf"},"MODULE MBA;\n\nREQUIRE MA, MB; // specifying that the MBA module depends on the MA and MB modules so that the system elements declared in them can be used in that module\n\nEXTEND CLASS B : A; // inheriting class B from A\na(ba) += b(ba); // specifying that for the abstract property a, property B should be used as an implementation\n")),Object(s.b)("p",null,"Therefore, the\xa0",Object(s.b)("strong",{parentName:"p"},"MA"),"\xa0and\xa0",Object(s.b)("strong",{parentName:"p"},"MB")," modules do not directly depend on each other and the relation between them can be enabled (disabled) by linking (unlinking) the\xa0",Object(s.b)("strong",{parentName:"p"},"MBA")," module. Note that the\xa0",Object(s.b)("strong",{parentName:"p"},"MBA"),"\xa0module extends the functionality of the\xa0",Object(s.b)("strong",{parentName:"p"},"MB")," module without any changes to its code."),Object(s.b)("p",null,"You can use mixin classes when using the metacode as follows:"),Object(s.b)("p",null,"Suppose that we have a metacode that declares a class and defines certain properties for it:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-lsf"},"MODULE MyModule;\n\nMETA defineMyClass (className) // declaring the defineMyClass metacode with the className parameter\n    CLASS className; // declaring a class named className\n    myProperty###className = DATA BPSTRING[20] (className); // adding a property named myProperty + className for the created class\nEND\n")),Object(s.b)("p",null,"Note that when calling this metacode, you cannot specify the classes from which the created class must inherit anything. However, this can be implemented through a mixin of classes as follows:"),Object(s.b)("pre",null,Object(s.b)("code",{parentName:"pre",className:"language-lsf"},'CLASS MySuperClass;\n\n@defineMyClass(MyClass); // calling the metacode that will create the class and property\n\nEXTEND CLASS MyClass : MySuperClass; // inheriting MyClass from MySuperClass, while MyClass will "will receive" all the properties that are declared for the MySuperClass class\n')))}p.isMDXComponent=!0},749:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var a=n(0),r=n.n(a);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)n=s[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=r.a.createContext({}),p=function(e){var t=r.a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return r.a.createElement(i.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,i=l(e,["components","mdxType","originalType","parentName"]),u=p(n),b=a,m=u["".concat(o,".").concat(b)]||u[b]||d[b]||s;return n?r.a.createElement(m,c(c({ref:t},i),{},{components:n})):r.a.createElement(m,c({ref:t},i))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=b;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var i=2;i<s;i++)o[i]=n[i];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);