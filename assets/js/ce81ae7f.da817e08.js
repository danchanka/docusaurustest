(window.webpackJsonp=window.webpackJsonp||[]).push([[551,461],{58:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return i})),r.d(t,"metadata",(function(){return u})),r.d(t,"toc",(function(){return d})),r.d(t,"CodeSample",(function(){return l})),r.d(t,"default",(function(){return m}));var n=r(3),a=r(7),o=r(0),s=r.n(o),c=r(750),p=r(751),i={},u={unversionedId:"CodeSample",id:"version-1.0.0/CodeSample",isDocsHomePage:!1,title:"CodeSample",description:"const [content, setContent] = useState('')",source:"@site/versioned_docs/version-1.0.0/CodeSample.mdx",slug:"/CodeSample",permalink:"/docusaurustest/docs/CodeSample",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/versioned_docs/version-1.0.0/CodeSample.mdx",version:"1.0.0"},d=[],l=function(e){var t=e.url,r=e.lines,n=Object(o.useState)(""),a=n[0],i=n[1];return Object(o.useEffect)((function(){fetch(t).then((function(e){return e.text()})).then((function(e){return i(e)}))}),[t,i]),a?r?Object(c.b)(s.a.Fragment,null,Object(c.b)(p.a,{className:"lsf",metastring:r,mdxType:"CodeBlock"},a),Object(c.b)("br",null)):Object(c.b)(s.a.Fragment,null,Object(c.b)(p.a,{className:"lsf",mdxType:"CodeBlock"},a),Object(c.b)("br",null)):Object(c.b)(p.a,{className:"lsf",mdxType:"CodeBlock"},"loading...")},b={toc:d,CodeSample:l};function m(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(n.a)({},b,r,{components:t,mdxType:"MDXLayout"}))}m.isMDXComponent=!0},622:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return c})),r.d(t,"metadata",(function(){return p})),r.d(t,"toc",(function(){return i})),r.d(t,"default",(function(){return d}));var n=r(3),a=r(7),o=(r(0),r(750)),s=r(58),c={title:"Change operators"},p={unversionedId:"Change_operators",id:"version-1.0.0/Change_operators",isDocsHomePage:!1,title:"Change operators",description:"Change operators - a set of operators that determine various types of property value changes.",source:"@site/versioned_docs/version-1.0.0/Change_operators.md",slug:"/Change_operators",permalink:"/docusaurustest/docs/Change_operators",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/versioned_docs/version-1.0.0/Change_operators.md",version:"1.0.0",sidebar:"version-1.0.0/docs",previous:{title:"IS, AS operators",permalink:"/docusaurustest/docs/IS_AS_operators"},next:{title:"Comparison operators",permalink:"/docusaurustest/docs/Comparison_operators"}},i=[{value:"Syntax",id:"syntax",children:[]},{value:"Description",id:"description",children:[]},{value:"Parameters",id:"parameters",children:[]},{value:"Examples",id:"examples",children:[]}],u={toc:i};function d(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},u,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Change operators - a set of operators that determine various types of ",Object(o.b)("a",{parentName:"p",href:"/docusaurustest/docs/Change_operators_SET_CHANGED_..._"},"property value changes"),".\xa0"),Object(o.b)("h3",{id:"syntax"},"Syntax"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre"},"typeChange(propExpr)\n")),Object(o.b)("h3",{id:"description"},"Description"),Object(o.b)("p",null,"Change operators create ",Object(o.b)("a",{parentName:"p",href:"/docusaurustest/docs/Properties"},"actions")," which\xa0determine whether some types of changes have been made for a\xa0certain property in the current session."),Object(o.b)("h3",{id:"parameters"},"Parameters"),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"typeChange")),Object(o.b)("p",null,"Type of the change operator. It is specified by one of the keywords:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"SET")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"CHANGED")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"DROPPED")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"SETCHANGED")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"DROPCHANGED")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("strong",{parentName:"li"},"SETDROPPED"))),Object(o.b)("p",null,Object(o.b)("em",{parentName:"p"},"propExpr")),Object(o.b)("p",null,"An ",Object(o.b)("a",{parentName:"p",href:"/docusaurustest/docs/Expression"},"expression")," which value defines the property that should be checked for the presence of a change."),Object(o.b)("h3",{id:"examples"},"Examples"),Object(o.b)(s.CodeSample,{url:"https://documentation.lsfusion.org/sample?file=OperatorPropertySample&block=changed",mdxType:"CodeSample"}),Object(o.b)("p",null,"**",Object(o.b)("br",{parentName:"p"}),"\n","**"))}d.isMDXComponent=!0}}]);