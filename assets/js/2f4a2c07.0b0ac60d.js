(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{134:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return s})),a.d(t,"toc",(function(){return p})),a.d(t,"default",(function(){return d}));var o=a(3),r=a(7),n=(a(0),a(424)),c=a(57),i={title:"Property change (CHANGE)"},s={unversionedId:"Property_change_CHANGE_",id:"Property_change_CHANGE_",isDocsHomePage:!1,title:"Property change (CHANGE)",description:"The property change operator allows you to change the values of one property (write) to the value of another property (read) for all object collections for which the value of a third property (condition) is not NULL. The condition can be omitted (in which case it is considered to be equal to TRUE).",source:"@site/docs/Property_change_CHANGE_.md",slug:"/Property_change_CHANGE_",permalink:"/docusaurustest/docs/Property_change_CHANGE_",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Property_change_CHANGE_.md",version:"current",sidebar:"docs",previous:{title:"State change: Overview",permalink:"/docusaurustest/docs/State_change"},next:{title:"New object (NEW)",permalink:"/docusaurustest/docs/New_object_NEW_"}},p=[{value:"Changeable properties",id:"changeable",children:[]},{value:"Language",id:"language",children:[]},{value:"Examples",id:"examples",children:[]}],l={toc:p};function d(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(n.b)("wrapper",Object(o.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(n.b)("p",null,"The ",Object(n.b)("em",{parentName:"p"},"property change")," operator allows you to change the values of one property (",Object(n.b)("em",{parentName:"p"},"write"),") to the value of another property (",Object(n.b)("em",{parentName:"p"},"read"),") for all object collections for which the value of a third property (",Object(n.b)("em",{parentName:"p"},"condition"),") is not ",Object(n.b)("strong",{parentName:"p"},"NULL"),". The condition can be omitted (in which case it is considered to be equal to ",Object(n.b)("strong",{parentName:"p"},"TRUE"),")."),Object(n.b)("h3",{id:"changeable"},"Changeable properties"),Object(n.b)("p",null,"In general, the property to be written should be ",Object(n.b)("a",{parentName:"p",href:"/docusaurustest/docs/Data_properties_DATA_"},"data"),", but the platform also allows writing to properties created using the ",Object(n.b)("a",{parentName:"p",href:"/docusaurustest/docs/Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE_"},"selection")," operator. In this case, the platform determines the condition that is met in this selection operator for the created property; the property corresponding to that condition is written to. Accordingly, all properties that can be written to we'll call ",Object(n.b)("em",{parentName:"p"},"mutable"),"."),Object(n.b)("div",{className:"admonition admonition-info alert alert--info"},Object(n.b)("div",{parentName:"div",className:"admonition-heading"},Object(n.b)("h5",{parentName:"div"},Object(n.b)("span",{parentName:"h5",className:"admonition-icon"},Object(n.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(n.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(n.b)("div",{parentName:"div",className:"admonition-content"},Object(n.b)("p",{parentName:"div"},"In addition to the above, mutable properties are also properties created using the ",Object(n.b)("a",{parentName:"p",href:"/docusaurustest/docs/Extremum_MAX_MIN_"},"extremum operator"),"\xa0and\xa0",Object(n.b)("a",{parentName:"p",href:"/docusaurustest/docs/Logical_operators_AND_OR_NOT_XOR_"},"logical operators")," (which are basically varieties of the selection operator)"))),Object(n.b)("h3",{id:"language"},"Language"),Object(n.b)("p",null,"To declare an action that implements property change, use the ",Object(n.b)("a",{parentName:"p",href:"/docusaurustest/docs/CHANGE_operator"},Object(n.b)("strong",{parentName:"a"},"CHANGE")," operator"),"."),Object(n.b)("h3",{id:"examples"},"Examples"),Object(n.b)(c.CodeSample,{url:"https://documentation.lsfusion.org/sample?file=ActionSample&block=assign",mdxType:"CodeSample"}))}d.isMDXComponent=!0}}]);