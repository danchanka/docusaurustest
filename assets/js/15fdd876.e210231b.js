(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{104:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return l}));var a=n(3),o=n(7),s=(n(0),n(424)),r=n(57),i={title:"Type conversion"},c={unversionedId:"Type_conversion",id:"Type_conversion",isDocsHomePage:!1,title:"Type conversion",description:"The type conversion operator creates a property that converts an object of one\xa0built-in class\xa0to an object of another built-in class. If type conversion is not possible, the property value will be NULL.",source:"@site/docs/Type_conversion.md",slug:"/Type_conversion",permalink:"/docusaurustest/docs/Type_conversion",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Type_conversion.md",version:"current",sidebar:"docs",previous:{title:"Structure operations (STRUCT, \\[\\])",permalink:"/docusaurustest/docs/Structure_operations_STRUCT_"},next:{title:"Class operations: Overview",permalink:"/docusaurustest/docs/Class_operations"}},p=[{value:"String and file types",id:"string-and-file-types",children:[]},{value:"Language",id:"language",children:[]},{value:"Examples",id:"examples",children:[]}],b={toc:p};function l(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},b,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"The ",Object(s.b)("em",{parentName:"p"},"type conversion")," operator creates a ",Object(s.b)("a",{parentName:"p",href:"/docusaurustest/docs/Properties"},"property")," that converts an object of one\xa0",Object(s.b)("a",{parentName:"p",href:"/docusaurustest/docs/Built-in_classes"},"built-in class"),"\xa0to an object of another built-in class. If type conversion is not possible, the property value will be ",Object(s.b)("strong",{parentName:"p"},"NULL"),"."),Object(s.b)("h3",{id:"string-and-file-types"},"String and file types"),Object(s.b)("p",null,"String types can be converted to human-readable file types (",Object(s.b)("strong",{parentName:"p"},"CSVFILE"),", ",Object(s.b)("strong",{parentName:"p"},"XMLFILE"),", ",Object(s.b)("strong",{parentName:"p"},"JSONFILE"),", ",Object(s.b)("strong",{parentName:"p"},"HTMLFILE"),", etc.), and vice versa - human-readable file types can be converted to string types."),Object(s.b)("div",{className:"admonition admonition-info alert alert--info"},Object(s.b)("div",{parentName:"div",className:"admonition-heading"},Object(s.b)("h5",{parentName:"div"},Object(s.b)("span",{parentName:"h5",className:"admonition-icon"},Object(s.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(s.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(s.b)("div",{parentName:"div",className:"admonition-content"},Object(s.b)("p",{parentName:"div"},"Converting dynamic-type files (",Object(s.b)("strong",{parentName:"p"},"FILE"),") to strings and vice versa is prohibited in the current implementation, but if necessary this can be done via an intermediate human-readable type - for example, by first converting to ",Object(s.b)("strong",{parentName:"p"},"CSVFILE"),", and only then to ",Object(s.b)("strong",{parentName:"p"},"FILE")," (the resulting file ",Object(s.b)("a",{parentName:"p",href:"/docusaurustest/docs/Built-in_classes#csv-broken"},"will have the extension")," CSV)"))),Object(s.b)("h3",{id:"language"},"Language"),Object(s.b)("p",null,"To implement conversion, the\xa0",Object(s.b)("a",{parentName:"p",href:"/docusaurustest/docs/Type_conversion_operator"},"type conversion operator")," is used."),Object(s.b)("h3",{id:"examples"},"Examples"),Object(s.b)(r.CodeSample,{url:"https://documentation.lsfusion.org/sample?file=OperatorPropertySample&block=explicitcast",mdxType:"CodeSample"}))}l.isMDXComponent=!0}}]);