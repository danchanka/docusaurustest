(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{129:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return c})),a.d(t,"metadata",(function(){return p})),a.d(t,"toc",(function(){return s})),a.d(t,"default",(function(){return i}));var n=a(3),r=a(7),o=(a(0),a(424)),c={title:"Coding conventions"},p={unversionedId:"Coding_conventions",id:"Coding_conventions",isDocsHomePage:!1,title:"Coding conventions",description:"1.  Common",source:"@site/docs/Coding_conventions.md",slug:"/Coding_conventions",permalink:"/docusaurustest/docs/Coding_conventions",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Coding_conventions.md",version:"current",sidebar:"docs",previous:{title:"Empty instruction",permalink:"/docusaurustest/docs/Empty_instruction"},next:{title:"IDE",permalink:"/docusaurustest/docs/IDE"}},s=[],b={toc:s};function i(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},b,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Common")),Object(o.b)("ol",{parentName:"li"},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Class names, module names, and namespace names begin with a capital letter. Other names (property, action, form, parameter, etc.) start with a lowercase letter. If the name consists of several words, then each subsequent word in the name begins with a capital letter."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre"},"MODULE MyModule;\n\nNAMESPACE MyNamespace;\n\nCLASS MyClass 'My Class';\n\nmyProperty 'My Property' = DATA BOOLEAN (MyClass);\nmyAction 'My Action' (MyClass o) {\n    myProperty(o) <- TRUE;\n}\n\nFORM myForm\n;\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Module, requirements and namespace declarations must be separated by blank lines:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre"},"MODULE MyModule;\n\nREQUIRE MyModule2;\n\nNAMESPACE MyNamespace;\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},'"=", "<", "',">",'", "<=", "',">",'=", "+", "-" signs are separated on both sides by spaces.'),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre"},"value(x) = 324\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"A space is placed after the comma. There should be no space before the comma."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre"},"f(x, y, z) = g(x, y, z) + h(x, y);\n\nFORM test\n    OBJECTS a = Class1, b = Class2\n    PROPERTIES VALUE(a), VALUE(b), name(a), name(b)\n;\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},'Every new property or action declaration starts on a new line. If there is another code after the ";", then a space is placed after the character.'),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre"},"runAction1 (X x) = { f(x) <- 1; g(x) <- 1; }\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},'When declaring a property or action, a space is inserted between the name or type and the symbol "(". When using a property, there is no space.'),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre"},"nameProperty (MyClass o) = name(property(o));\nmyProperty = DATA STRING[10] (MyClass);\n"))))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Actions"),"  "),Object(o.b)("ol",{parentName:"li"},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},'Each "logically nested" line should have an offset by exactly 4 spaces. Actions are considered nested after ',Object(o.b)("strong",{parentName:"p"},"IF"),", ",Object(o.b)("strong",{parentName:"p"},"FOR"),", ",Object(o.b)("strong",{parentName:"p"},"WHILE"),", as well as after the property declaration itself:"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre"},"IF x = 1 THEN\n    f(a) <- TRUE;\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},'Spaces are placed before and after symbols "{" and "<-".'),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre"},"FOR f(a) DO\xa0{\n\xa0 \xa0 x(a) <- TRUE;\n}\n\u0438\u043b\u0438\nFOR f(a) DO\xa0{ x(a)\xa0<- TRUE;\xa0}\n"))))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},Object(o.b)("strong",{parentName:"p"},"Forms")),Object(o.b)("ol",{parentName:"li"},Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Object declarations are separated by an empty line."),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre"},"FORM test\n    OBJECTS a = Object\n    PROPERTIES(a) VALUE\n\n    OBJECTS b = Object\n    PROPERTIES(b) VALUE\n;   \n")))))))}i.isMDXComponent=!0}}]);