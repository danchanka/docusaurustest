(window.webpackJsonp=window.webpackJsonp||[]).push([[308],{381:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return l})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return u})),r.d(t,"default",(function(){return p}));var b=r(3),n=r(7),a=(r(0),r(749)),l={title:"Operator priority"},c={unversionedId:"Operator_priority",id:"Operator_priority",isDocsHomePage:!1,title:"Operator priority",description:"When evaluating an expression, operators\xa0are evaluated in a specific order depending on operator priority. The higher the operator\u2019s priority, the earlier it will be executed. The table below lists the priorities of all operators in descending order.*\xa0*",source:"@site/docs/Operator_priority.md",slug:"/Operator_priority",permalink:"/docusaurustest/docs/next/Operator_priority",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Operator_priority.md",version:"current",sidebar:"docs",previous:{title:"Expression: Overview",permalink:"/docusaurustest/docs/next/Expression"},next:{title:"Property operators: Overview",permalink:"/docusaurustest/docs/next/Property_operators"}},u=[],o={toc:u};function p(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(a.b)("wrapper",Object(b.a)({},o,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,"When evaluating an ",Object(a.b)("a",{parentName:"p",href:"/docusaurustest/docs/next/Expression"},"expression"),", ",Object(a.b)("a",{parentName:"p",href:"/docusaurustest/docs/next/Operators"},"operators"),"\xa0are evaluated in a specific order depending on ",Object(a.b)("em",{parentName:"p"},"operator priority.")," The higher the operator\u2019s priority, the earlier it will be executed. The table below lists the priorities of all operators in descending order.*\xa0*"),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",{parentName:"tr",align:null},"Operator"),Object(a.b)("th",{parentName:"tr",align:null},"Description"),Object(a.b)("th",{parentName:"tr",align:null},"Type"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,"(expression)"),Object(a.b)("br",null),Object(a.b)("p",null,"JOIN"),Object(a.b)("br",null),Object(a.b)("p",null,"CASE, MULTI, OVERRIDE, EXCLUSIVE, IF ... THEN"),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/PARTITION_operator"},"PARTITION")),Object(a.b)("br",null),Object(a.b)("p",null,"RECURSION"),Object(a.b)("br",null),Object(a.b)("p",null,"GROUP"),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/STRUCT_operator"},"STRUCT")),Object(a.b)("br",null),Object(a.b)("p",null,"MAX/MIN"),Object(a.b)("br",null),Object(a.b)("p",null,"CONCAT"),Object(a.b)("br",null),Object(a.b)("p",null,"INTEGER, DOUBLE..."),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/PREV_operator"},"PREV"),", ",Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Change_operators"},"CHANGED, ...")),Object(a.b)("br",null),Object(a.b)("p",null,"CLASS"),Object(a.b)("br",null),Object(a.b)("p",null,"ACTIVE"),Object(a.b)("br",null),Object(a.b)("p",null,"literal")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,"Expression in parentheses"),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Composition_JOIN_"},"Composition")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE_"},"Selection")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Partitioning_sorting_PARTITION_..._ORDER_"},"Partition/order")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Recursion_RECURSION_"},"Recursion")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Grouping_GROUP_"},"Group")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Structure_operations_STRUCT_"},"Structure creation")),Object(a.b)("br",null),Object(a.b)("p",null,"Maximum/minimum"),Object(a.b)("br",null),Object(a.b)("p",null,"String concatenation"),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Type_conversion"},"Type conversion")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("br",null),Object(a.b)("br",null)),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Property_signature_CLASS_"},"Property signature")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Activity_ACTIVE_"},"Activity")),Object(a.b)("br",null),Object(a.b)("p",null,"\xa0",Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Constant"},"Constants"))),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,Object(a.b)("br",null),Object(a.b)("br",null)),Object(a.b)("br",null),Object(a.b)("p",null,"Prefix"),Object(a.b)("br",null),Object(a.b)("p",null,"Prefix"),Object(a.b)("br",null),Object(a.b)("p",null,"Prefix"),Object(a.b)("br",null),Object(a.b)("p",null,"Prefix"),Object(a.b)("br",null),Object(a.b)("p",null,"Prefix"),Object(a.b)("br",null),Object(a.b)("p",null,"Prefix"),Object(a.b)("br",null),Object(a.b)("p",null,"Prefix"),Object(a.b)("br",null),Object(a.b)("p",null,"Prefix"),Object(a.b)("br",null),Object(a.b)("p",null,"Prefix"),Object(a.b)("br",null),Object(a.b)("p",null,"Prefix"),Object(a.b)("br",null),Object(a.b)("p",null,"Prefix"),Object(a.b)("br",null),Object(a.b)("p",null,"Prefix"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Operator_"},"[ ]")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/IS_AS_operators"},"IS")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/IS_AS_operators"},"AS"))),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Structure_operations_STRUCT_"},"Structure element access")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Classification_IS_AS_"},"Classification")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Classification_IS_AS_"},"Classification"))),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,"Postfix"),Object(a.b)("br",null),Object(a.b)("p",null,"Postfix"),Object(a.b)("br",null),Object(a.b)("p",null,"Postfix"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Arithmetic_operators"},"-")),Object(a.b)("td",{parentName:"tr",align:null},"Unary minus"),Object(a.b)("td",{parentName:"tr",align:null},"Prefix")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Arithmetic_operators"},"*")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Arithmetic_operators"},"/"))),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,"Multiplication"),Object(a.b)("br",null),Object(a.b)("p",null,"Division")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,"Binary"),Object(a.b)("br",null),Object(a.b)("p",null,"Binary"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Arithmetic_operators"},"+")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Arithmetic_operators"},"-"))),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,"Addition"),Object(a.b)("br",null),Object(a.b)("p",null,"Subtraction")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,"Binary"),Object(a.b)("br",null),Object(a.b)("p",null,"Binary"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Arithmetic_operators"},"(+)")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Arithmetic_operators"},"(-)"))),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,"Addition with NULL values"),Object(a.b)("br",null),Object(a.b)("p",null,"Subtraction with NULL values")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,"Binary"),Object(a.b)("br",null),Object(a.b)("p",null,"Binary"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Comparison_operators"},"<")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Comparison_operators"},"<=")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Comparison_operators"},">")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Comparison_operators"},">","="))),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,"Less"),Object(a.b)("br",null),Object(a.b)("p",null,"Less or equal"),Object(a.b)("br",null),Object(a.b)("p",null,"Greater"),Object(a.b)("br",null),Object(a.b)("p",null,"Greater or equal")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,"Binary"),Object(a.b)("br",null),Object(a.b)("p",null,"Binary"),Object(a.b)("br",null),Object(a.b)("p",null,"Binary"),Object(a.b)("br",null),Object(a.b)("p",null,"Binary"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Comparison_operators"},"==")),Object(a.b)("br",null),Object(a.b)("p",null,Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Comparison_operators"},"!="))),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,"Equal"),Object(a.b)("br",null),Object(a.b)("p",null,"Not equal")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("p",null,"Binary"),Object(a.b)("br",null),Object(a.b)("p",null,"Binary"))),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/AND_OR_NOT_XOR_operators"},"NOT")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Logical_operators_AND_OR_NOT_XOR_"},"Logical negation")),Object(a.b)("td",{parentName:"tr",align:null},"Prefix")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/AND_OR_NOT_XOR_operators"},"AND")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Logical_operators_AND_OR_NOT_XOR_"},"Logical AND")),Object(a.b)("td",{parentName:"tr",align:null},"Binary")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/AND_OR_NOT_XOR_operators"},"XOR")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Logical_operators_AND_OR_NOT_XOR_"},"Logical exclusive OR")),Object(a.b)("td",{parentName:"tr",align:null},"Binary")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/AND_OR_NOT_XOR_operators"},"OR")),Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/Logical_operators_AND_OR_NOT_XOR_"},"Logical OR")),Object(a.b)("td",{parentName:"tr",align:null},"Binary")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",{parentName:"tr",align:null},Object(a.b)("a",{parentName:"td",href:"/docusaurustest/docs/next/IF_operator"},"IF")),Object(a.b)("td",{parentName:"tr",align:null},"Condition"),Object(a.b)("td",{parentName:"tr",align:null},"Binary")))),Object(a.b)("p",null,"*\xa0*\xa0"))}p.isMDXComponent=!0},749:function(e,t,r){"use strict";r.d(t,"a",(function(){return O})),r.d(t,"b",(function(){return j}));var b=r(0),n=r.n(b);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var b=Object.getOwnPropertySymbols(e);t&&(b=b.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,b)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,b,n=function(e,t){if(null==e)return{};var r,b,n={},a=Object.keys(e);for(b=0;b<a.length;b++)r=a[b],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(b=0;b<a.length;b++)r=a[b],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var o=n.a.createContext({}),p=function(e){var t=n.a.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},O=function(e){var t=p(e.components);return n.a.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},i=n.a.forwardRef((function(e,t){var r=e.components,b=e.mdxType,a=e.originalType,l=e.parentName,o=u(e,["components","mdxType","originalType","parentName"]),O=p(r),i=b,j=O["".concat(l,".").concat(i)]||O[i]||s[i]||a;return r?n.a.createElement(j,c(c({ref:t},o),{},{components:r})):n.a.createElement(j,c({ref:t},o))}));function j(e,t){var r=arguments,b=t&&t.mdxType;if("string"==typeof e||b){var a=r.length,l=new Array(a);l[0]=i;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:b,l[1]=c;for(var o=2;o<a;o++)l[o]=r[o];return n.a.createElement.apply(null,l)}return n.a.createElement.apply(null,r)}i.displayName="MDXCreateElement"}}]);