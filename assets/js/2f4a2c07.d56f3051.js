(window.webpackJsonp=window.webpackJsonp||[]).push([[110,436],{184:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return s})),o.d(t,"metadata",(function(){return i})),o.d(t,"toc",(function(){return p})),o.d(t,"default",(function(){return l}));var a=o(3),n=o(7),r=(o(0),o(750)),c=o(57),s={title:"Property change (CHANGE)"},i={unversionedId:"Property_change_CHANGE_",id:"Property_change_CHANGE_",isDocsHomePage:!1,title:"Property change (CHANGE)",description:"The property change operator allows you to change the values of one property (write) to the value of another property (read) for all object collections for which the value of a third property (condition) is not NULL. The condition can be omitted (in which case it is considered to be equal to TRUE).",source:"@site/docs/Property_change_CHANGE_.md",slug:"/Property_change_CHANGE_",permalink:"/docusaurustest/docs/next/Property_change_CHANGE_",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Property_change_CHANGE_.md",version:"current",sidebar:"docs",previous:{title:"State change: Overview",permalink:"/docusaurustest/docs/next/State_change"},next:{title:"New object (NEW)",permalink:"/docusaurustest/docs/next/New_object_NEW_"}},p=[{value:"Changeable properties",id:"changeable",children:[]},{value:"Language",id:"language",children:[]},{value:"Examples",id:"examples",children:[]}],d={toc:p};function l(e){var t=e.components,o=Object(n.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},d,o,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"The ",Object(r.b)("em",{parentName:"p"},"property change")," operator allows you to change the values of one property (",Object(r.b)("em",{parentName:"p"},"write"),") to the value of another property (",Object(r.b)("em",{parentName:"p"},"read"),") for all object collections for which the value of a third property (",Object(r.b)("em",{parentName:"p"},"condition"),") is not ",Object(r.b)("strong",{parentName:"p"},"NULL"),". The condition can be omitted (in which case it is considered to be equal to ",Object(r.b)("strong",{parentName:"p"},"TRUE"),")."),Object(r.b)("h3",{id:"changeable"},"Changeable properties"),Object(r.b)("p",null,"In general, the property to be written should be ",Object(r.b)("a",{parentName:"p",href:"/docusaurustest/docs/next/Data_properties_DATA_"},"data"),", but the platform also allows writing to properties created using the ",Object(r.b)("a",{parentName:"p",href:"/docusaurustest/docs/next/Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE_"},"selection")," operator. In this case, the platform determines the condition that is met in this selection operator for the created property; the property corresponding to that condition is written to. Accordingly, all properties that can be written to we'll call ",Object(r.b)("em",{parentName:"p"},"mutable"),"."),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"In addition to the above, mutable properties are also properties created using the ",Object(r.b)("a",{parentName:"p",href:"/docusaurustest/docs/next/Extremum_MAX_MIN_"},"extremum operator"),"\xa0and\xa0",Object(r.b)("a",{parentName:"p",href:"/docusaurustest/docs/next/Logical_operators_AND_OR_NOT_XOR_"},"logical operators")," (which are basically varieties of the selection operator)"))),Object(r.b)("h3",{id:"language"},"Language"),Object(r.b)("p",null,"To declare an action that implements property change, use the ",Object(r.b)("a",{parentName:"p",href:"/docusaurustest/docs/next/CHANGE_operator"},Object(r.b)("strong",{parentName:"a"},"CHANGE")," operator"),"."),Object(r.b)("h3",{id:"examples"},"Examples"),Object(r.b)(c.CodeSample,{url:"https://documentation.lsfusion.org/sample?file=ActionSample&block=assign",mdxType:"CodeSample"}))}l.isMDXComponent=!0},57:function(e,t,o){"use strict";o.r(t),o.d(t,"frontMatter",(function(){return p})),o.d(t,"metadata",(function(){return d})),o.d(t,"toc",(function(){return l})),o.d(t,"CodeSample",(function(){return u})),o.d(t,"default",(function(){return m}));var a=o(3),n=o(7),r=o(0),c=o.n(r),s=o(750),i=o(751),p={},d={unversionedId:"CodeSample",id:"CodeSample",isDocsHomePage:!1,title:"CodeSample",description:"const [content, setContent] = useState('')",source:"@site/docs/CodeSample.mdx",slug:"/CodeSample",permalink:"/docusaurustest/docs/next/CodeSample",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/CodeSample.mdx",version:"current"},l=[],u=function(e){var t=e.url,o=e.lines,a=Object(r.useState)(""),n=a[0],p=a[1];return Object(r.useEffect)((function(){fetch(t).then((function(e){return e.text()})).then((function(e){return p(e)}))}),[t,p]),n?o?Object(s.b)(c.a.Fragment,null,Object(s.b)(i.a,{className:"lsf",metastring:o,mdxType:"CodeBlock"},n),Object(s.b)("br",null)):Object(s.b)(c.a.Fragment,null,Object(s.b)(i.a,{className:"lsf",mdxType:"CodeBlock"},n),Object(s.b)("br",null)):Object(s.b)(i.a,{className:"lsf",mdxType:"CodeBlock"},"loading...")},b={toc:l,CodeSample:u};function m(e){var t=e.components,o=Object(n.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},b,o,{components:t,mdxType:"MDXLayout"}))}m.isMDXComponent=!0}}]);