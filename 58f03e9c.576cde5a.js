(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{189:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return u}));var o=r(3),n=r(7),a=(r(0),r(419)),s={title:"Arithmetic operators (+, -, *, ...)"},i={unversionedId:"Arithmetic_operators_+_-_..._",id:"Arithmetic_operators_+_-_..._",isDocsHomePage:!1,title:"Arithmetic operators (+, -, \\*, ...)",description:"Arithmetic operators\xa0create properties whose value is the result of an arithmetic operation.\xa0The arguments of these operators must be\xa0properties whose values are instances of number classes . The platform currently supports the following arithmetic operators:",source:"@site/docs\\Arithmetic_operators_+_-_..._.md",slug:"/Arithmetic_operators_+_-_..._",permalink:"/docusaurustest/docs/Arithmetic_operators_+_-_..._",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Arithmetic_operators_+_-_..._.md",version:"current",sidebar:"docs",previous:{title:"Primitive operations",permalink:"/docusaurustest/docs/Primitive_operations"},next:{title:"Logical operators (AND, OR, NOT, XOR)",permalink:"/docusaurustest/docs/Logical_operators_AND_OR_NOT_XOR_"}},c=[],p={toc:c};function u(e){var t=e.components,r=Object(n.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Arithmetic operators"),"\xa0create ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/docusaurustest/docs/Properties"}),"properties")," whose value is the result of an arithmetic operation.\xa0The arguments of these operators must be\xa0properties whose values are instances of ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/docusaurustest/docs/Built-in_classes"}),"number classes")," . The platform currently supports the following arithmetic operators:"),Object(a.b)("p",null,"All of these operators return ",Object(a.b)("strong",{parentName:"p"},"NULL")," if one of the operands is ",Object(a.b)("strong",{parentName:"p"},"NULL")," . It is also possible to use a special form of summation and difference operators with\xa0brackets, in which case ",Object(a.b)("strong",{parentName:"p"},"NULL")," will be equivalent to 0. The reverse is also true for these type of operators: if the result of an operator in such form is 0, then ",Object(a.b)("strong",{parentName:"p"},"NULL is returned")," (e. g., 5 (-) 5 = ",Object(a.b)("strong",{parentName:"p"},"NULL"),"):"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Determining the result class")),Object(a.b)("p",null,"The result class is determined as:"),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Language")),Object(a.b)("p",null,"Description ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"/docusaurustest/docs/Arithmetic_operators"}),"of arithmetic operators"),"."),Object(a.b)("p",null,Object(a.b)("strong",{parentName:"p"},"Examples")))}u.isMDXComponent=!0},419:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return f}));var o=r(0),n=r.n(o);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var p=n.a.createContext({}),u=function(e){var t=n.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=u(e.components);return n.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.a.createElement(n.a.Fragment,{},t)}},b=n.a.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=u(r),b=o,f=l["".concat(s,".").concat(b)]||l[b]||m[b]||a;return r?n.a.createElement(f,i(i({ref:t},p),{},{components:r})):n.a.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,s=new Array(a);s[0]=b;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return n.a.createElement.apply(null,s)}return n.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"}}]);