(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{258:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return i})),r.d(t,"toc",(function(){return c})),r.d(t,"default",(function(){return u}));var n=r(3),o=r(7),a=(r(0),r(420)),s={title:"Arithmetic operators (+, -, *, ...)"},i={unversionedId:"Arithmetic_operators_+_-_...",id:"Arithmetic_operators_+_-_...",isDocsHomePage:!1,title:"Arithmetic operators (+, -, \\*, ...)",description:"Arithmetic operators\xa0create properties whose value is the result of an arithmetic operation.\xa0The arguments of these operators must be\xa0properties whose values are instances of number classes . The platform currently supports the following arithmetic operators:",source:"@site/docs\\Arithmetic_operators_+_-_....md",slug:"/Arithmetic_operators_+_-_...",permalink:"/docusaurustest/docs/Arithmetic_operators_+_-_...",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Arithmetic_operators_+_-_....md",version:"current",sidebar:"docs",previous:{title:"Primitive operations",permalink:"/docusaurustest/docs/Primitive_operations"},next:{title:"Logical operators (AND, OR, NOT, XOR)",permalink:"/docusaurustest/docs/Logical_operators_AND_OR_NOT_XOR"}},c=[{value:"Determining the result class",id:"determining-the-result-class",children:[]},{value:"Language",id:"language",children:[]},{value:"Examples",id:"examples",children:[]}],p={toc:c};function u(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(n.a)({},p,r,{components:t,mdxType:"MDXLayout"}),Object(a.b)("p",null,Object(a.b)("em",{parentName:"p"},"Arithmetic operators"),"\xa0create ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/docusaurustest/docs/Properties"}),"properties")," whose value is the result of an arithmetic operation.\xa0The arguments of these operators must be\xa0properties whose values are instances of ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/docusaurustest/docs/Built-in_classes"}),"number classes")," . The platform currently supports the following arithmetic operators:"),Object(a.b)("p",null,"All of these operators return ",Object(a.b)("strong",{parentName:"p"},"NULL")," if one of the operands is ",Object(a.b)("strong",{parentName:"p"},"NULL")," . It is also possible to use a special form of summation and difference operators with\xa0brackets, in which case ",Object(a.b)("strong",{parentName:"p"},"NULL")," will be equivalent to 0. The reverse is also true for these type of operators: if the result of an operator in such form is 0, then ",Object(a.b)("strong",{parentName:"p"},"NULL is returned")," (e. g., 5 (-) 5 = ",Object(a.b)("strong",{parentName:"p"},"NULL"),"):"),Object(a.b)("h3",{id:"determining-the-result-class"},"Determining the result class"),Object(a.b)("p",null,"The result class is determined as:"),Object(a.b)("h3",{id:"language"},"Language"),Object(a.b)("p",null,"Description ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"/docusaurustest/docs/Arithmetic_operators"}),"of arithmetic operators"),"."),Object(a.b)("h3",{id:"examples"},"Examples"))}u.isMDXComponent=!0},420:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return b}));var n=r(0),o=r.n(n);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var p=o.a.createContext({}),u=function(e){var t=o.a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=u(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},f=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),l=u(r),f=n,b=l["".concat(s,".").concat(f)]||l[f]||m[f]||a;return r?o.a.createElement(b,i(i({ref:t},p),{},{components:r})):o.a.createElement(b,i({ref:t},p))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,s=new Array(a);s[0]=f;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var p=2;p<a;p++)s[p]=r[p];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,r)}f.displayName="MDXCreateElement"}}]);