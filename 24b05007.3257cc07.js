(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{122:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return o})),n.d(t,"default",(function(){return p}));var r=n(3),a=n(7),s=(n(0),n(419)),i={title:"Built-in classes"},c={unversionedId:"Built-in_classes",id:"Built-in_classes",isDocsHomePage:!1,title:"Built-in classes",description:"Built-in classes are classes whose instances are objects belonging to primitive data types such as integers, strings, etc.",source:"@site/docs\\Built-in_classes.md",slug:"/Built-in_classes",permalink:"/docusaurustest/docs/Built-in_classes",editUrl:"https://github.com/danchanka/docusaurustest/edit/master/docs/Built-in_classes.md",version:"current",sidebar:"docs",previous:{title:"Classes",permalink:"/docusaurustest/docs/Classes"},next:{title:"Static objects",permalink:"/docusaurustest/docs/Static_objects"}},o=[{value:"Inheritance",id:"inheritance",children:[]},{value:"<strong>Common ancestor</strong>",id:"common-ancestor",children:[]},{value:"Default value",id:"default-value",children:[]},{value:"Extensions of specific type files",id:"extensions-of-specific-type-files",children:[]},{value:"The order of determining the result property when accessing from an external system",id:"the-order-of-determining-the-result-property-when-accessing-from-an-external-system",children:[]}],l={toc:o};function p(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(s.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Built-in classes")," are ",Object(s.b)("a",Object(r.a)({parentName:"p"},{href:"/docusaurustest/docs/Classes"}),"classes")," whose instances are objects belonging to primitive data types such as integers, strings, etc.\xa0"),Object(s.b)("h3",{id:"inheritance"},"Inheritance"),Object(s.b)("p",null,"The builtin classes can be divided into four class ",Object(s.b)("em",{parentName:"p"},"families"),"\xa0(assuming that each\xa0of the remaining classes forms its own class family)"),Object(s.b)("p",null,"The builtin classes inherit only from one another within a single family, and cannot inherit from or be inherited by user classes. Inheritance within each family works on the principle that the narrower class inherits from the broader one."),Object(s.b)("h3",{id:"common-ancestor"},Object(s.b)("strong",{parentName:"h3"},"Common ancestor")),Object(s.b)("p",null,"According to this inheritance mechanism, the common ancestor of two builtin classes (e.g. for the\xa0",Object(s.b)("a",Object(r.a)({parentName:"p"},{href:"/docusaurustest/docs/Selection_CASE_IF_MULTI_OVERRIDE_EXCLUSIVE"}),"selection")," operation) is determined as follows:"),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Strings"),":"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{}),"result = STRING[blankPadded = s1.blankPadded OR s2.blankPadded, caseInsensitive = s1.caseInsensitive OR s2.caseInsensitive, length = MAX(s1.length, s2.length)]\n")),Object(s.b)("p",null,"where ",Object(s.b)("em",{parentName:"p"},"blankPadded"),", ",Object(s.b)("em",{parentName:"p"},"caseInsensitive")," and ",Object(s.b)("em",{parentName:"p"},"length")," are in turn determined as:"),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Numbers"),":"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{}),"IF p1.integerPart >= p2.integerPart AND p1.precision >= p2.precision\n    result = p1\xa0\nELSE IF p1.integerPart >= p2.integerPart AND p1.precision >= p2.precision\n    result = p2\xa0\nELSE IF p1.integerPart > p2.integerPart \xa0\n    result = NUMERIC[p1.integerPart+p2.precision, p2.precision]\nELSE \xa0\n    result = NUMERIC[p2.integerPart+p1.precision, p1.precision]\n")),Object(s.b)("p",null,"where integerPart and precision, in turn, are determined as:"),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Files of a specific type"),":"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{}),"IF p1 = p2\n    result = p1\nELSE\n    result = RAWFILE\n")),Object(s.b)("p",null,Object(s.b)("em",{parentName:"p"},"Links to files of a specific type"),":"),Object(s.b)("pre",null,Object(s.b)("code",Object(r.a)({parentName:"pre"},{}),"IF p1 = p2\n    result = p1\nELSE\n    result = RAWLINK\n")),Object(s.b)("p",null,"Note that sometimes in programming the definition of a common parent class is associated with ",Object(s.b)("em",{parentName:"p"},"implicit typecasting"),"."),Object(s.b)("h3",{id:"default-value"},"Default value"),Object(s.b)("p",null,"It is sometimes necessary to use some value for a built-in class which will differ from ",Object(s.b)("strong",{parentName:"p"},"NULL")," (for example, in an import condition with ",Object(s.b)("a",Object(r.a)({parentName:"p"},{href:"/docusaurustest/docs/Data_import_IMPORT"}),"data import"),"). Let's call this value the ",Object(s.b)("em",{parentName:"p"},"default value"),". It is defined as follows:"),Object(s.b)("h3",{id:"extensions-of-specific-type-files"},"Extensions of specific type files"),Object(s.b)("p",null,"When files of a specific type (",Object(s.b)("strong",{parentName:"p"},"JSONFILE"),", ",Object(s.b)("strong",{parentName:"p"},"XMLFILE"),", ...) are cast into a file of dynamic type (",Object(s.b)("strong",{parentName:"p"},"FILE"),"), whether explicitly or implicitly (e.g. with ",Object(s.b)("a",Object(r.a)({parentName:"p"},{href:"/docusaurustest/docs/Data_import_IMPORT"}),"data import"),"\xa0without specifying a format or when ",Object(s.b)("a",Object(r.a)({parentName:"p"},{href:"/docusaurustest/docs/Access_to_an_external_system_EXTERNAL"}),"working with external systems"),"), the extension of the result file is determined as follows:"),Object(s.b)("h3",{id:"the-order-of-determining-the-result-property-when-accessing-from-an-external-system"},"The order of determining the result property when ",Object(s.b)("a",Object(r.a)({parentName:"h3"},{href:"Access-from-an-external-system_51216539.html#Accessfromanexternalsystem-httpresult"}),"accessing from an external system")))}p.isMDXComponent=!0},419:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,d=u["".concat(i,".").concat(m)]||u[m]||b[m]||s;return n?a.a.createElement(d,c(c({ref:t},l),{},{components:n})):a.a.createElement(d,c({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,i=new Array(s);i[0]=m;var c={};for(var o in t)hasOwnProperty.call(t,o)&&(c[o]=t[o]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<s;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);